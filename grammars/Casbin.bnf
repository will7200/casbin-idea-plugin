{
  parserClass="io.github.will7200.plugins.casbin.language.parser.CasbinParser"
  parserUtilClass = "io.github.will7200.plugins.casbin.language.parser.CasbinParserUtil"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Casbin"
  psiImplClassSuffix="Impl"
  psiPackage="io.github.will7200.plugins.casbin.language.psi"
  psiImplPackage="io.github.will7200.plugins.casbin.language.psi.impl"

  elementTypeHolderClass="io.github.will7200.plugins.casbin.language.psi.CasbinElementTypes"
  elementTypeClass="io.github.will7200.plugins.casbin.language.psi.CasbinElementType"
  tokenTypeClass="io.github.will7200.plugins.casbin.language.psi.CasbinTokenType"
  extends(".*Expr")=Expr
  tokens = [
      DOT = "."
      L_BRACKET = "["
      R_BRACKET = "]"
      OPEN_QUOTES = "\""
      CLOSE_QUOTES = "\""
      ASSIGN = "="
      COMMA = ","
      OP_AND = "&&"
      OP_OR = "||"
      OP_EQUALS = "=="
      OP_NOT = "!"
      ALLOW = "allow"
      DENY = "deny"
      LINE_COMMENT='regexp:[#;].*'
      SECTION_IDENTIFER='regexp:[A-Za-z_]+'
      IDENTIFIER='regexp:[A-Za-z]?[A-Za-z_0-9]+'
      SPACE = "regexp:\s+"
      L_PARATHESIS = "("
      R_PARATHESIS = ")"
  ]
  psiImplUtilClass = "io.github.will7200.plugins.casbin.language.psi.CasbinPsiUtils"
}
casbinModel ::= section*
section ::= header property* {
   mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinSectionMixin"
   methods=[getProperties hasProperty setProperty getProperty getName setName getPresentation]
}
header ::= L_BRACKET section_name R_BRACKET {
  pin=1
  recoverWhile=not_next_entry
}

section_name ::= SECTION_IDENTIFER
// Property
property ::= key ASSIGN value {
  pin=2
  recoverWhile=not_next_entry
  mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinPropertyMixin"
  methods=[getName getKey getValue getPresentation]
}


private key ::= flat_key
private value ::= option_values
// ---- ---- Key ---- ----

flat_key ::= IDENTIFIER

// ---- ---- Value ---- ----

option_values ::= (value_tuple | value_expression | value_identifier)
value_expression ::= Expr
value_tuple ::= attribute_definition (COMMA attribute_definition)+
value_identifier ::= IDENTIFIER

// ---- ---- Expressions ---- ----
function ::= [OP_NOT] function_name L_PARATHESIS function_signature R_PARATHESIS {
  mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinFunctionMixin"
  methods=[getName]
}
function_signature ::= (function | equality | parameters)

parameters ::= ((some_value (COMMA some_value)+) | some_value)
equality ::= some_value OP_EQUALS some_value
some_value ::= (object | ALLOW | DENY | string_value)

object ::= object_identifier DOT attribute (DOT sub_attribute)* {
  mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinObjectMixin"
  methods=[getName]
}

// ---- ---- (Expressions) Condition ---- ----

Expr            ::= relationalExpr | primaryGroup
relationalExpr  ::= Expr relOp Expr
parenExpr       ::= parenConstruct
literalExpr     ::= (equality | function | some_value)

private primaryGroup    ::= literalExpr | parenExpr
private relOp           ::= OP_AND | OP_OR
private parenConstruct  ::= '(' [ !')' Expr (',' Expr) * ] ')'

// ---- ---- Low Level Identifiers ---- ----
string_value ::= OPEN_QUOTES IDENTIFIER CLOSE_QUOTES
object_identifier ::= IDENTIFIER
function_name ::= IDENTIFIER
attribute  ::= (IDENTIFIER | "_"){
  mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinAttributeMixin"
  methods=[getName]
}
attribute_definition ::= IDENTIFIER | "_"{
  mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinAttributeDefinitionMixin"
  methods=[getName]
}
sub_attribute  ::= (IDENTIFIER | "_"){
  mixin="io.github.will7200.plugins.casbin.language.psi.impl.CasbinSubAttributeMixin"
  methods=[getName]
}

// ---- ---- Recovery ---- ----
private not_header ::= !header
private not_next_entry ::= !(header | value)